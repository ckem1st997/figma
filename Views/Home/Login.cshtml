@model figma.Controllers.HomeController.LoginViewModel

@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var returnUrl = @Context.Request.Query["returnurl"];
}

<div class="row d-flex justify-content-center mt-5">
    <div class="col-md-4">
        <form asp-action="Login" asp-route-returnUrl="@returnUrl">
            @{
                if (TempData["tq"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        Message: @TempData["tq"]
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
            }
            <h2>User Login</h2>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span id="validationuser" asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input type="password" asp-for="Password" class="form-control" />
                <span id="validationpw" asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Remember" /> @Html.DisplayNameFor(model => model.Remember)
                    <a class="form-check-input"></a>

                </label>
            </div>
            <div class="form-group d-flex justify-content-between">
                <div class="form-group">
                    <a asp-action="PasswordEmail" class="btn btn-default btn-primary">Quên mật khẩu</a>
                </div>
            </div>
            <div class="form-group d-flex justify-content-between">
                <div class="form-group">
                    <input id="Login" type="submit" value="Login" class="btn btn-default btn-primary" />
                </div>
                <div class="form-group">
                    <a asp-action="Register" class="btn btn-default btn-primary">Register</a>
                </div>
            </div>
            <div class="g-signin2" data-onsuccess="onSignIn"></div>
            <a href="#" class="d-none" onclick="signOut();">Sign out</a>

            <fb:login-button scope="public_profile,email"
                             onlogin="checkLoginState();">
            </fb:login-button>
            <script>
                function signOut() {
                    var auth2 = gapi.auth2.getAuthInstance(); auth2.signOut().then(function () {
                        console.log('User signed out.');
                    });
                }

                function onSignIn(googleUser) {
                    var id_token = googleUser.getAuthResponse().id_token;
                    var profile = googleUser.getBasicProfile();
                    SendToken(id_token);
                }
                function SendToken(token) {
                    //   console.log(token);
                    var params = {
                        type: 'GET',
                        url: '/Home/GoogleLogin',
                        data: { Token: token },
                        dataType: "json",
                        success: function (res) {
                            window.location.assign('/Home/Account')
                            console.log(res);
                        },
                        error: function (errormessage) {
                            console.log(errormessage)
                        }
                    };
                    jQuery.ajax(params);
                }
                function SendFb(token) {
                    //console.log(token.authResponse.accessToken);
                    var params = {
                        type: 'GET',
                        url: '/Home/FaceBookLogin',
                        data: { accessToken: token.authResponse.accessToken, userID: token.authResponse.userID, graphDomain: token.authResponse.graphDomain },
                        dataType: "json",
                        success: function (res) {
                            //  window.location.assign('/Home/Account')
                            console.log(res);
                        },
                        error: function (errormessage) {
                            console.log(errormessage)
                        }
                    };
                    jQuery.ajax(params);
                }
                // fb

                function checkLoginState() {
                    FB.getLoginStatus(function (response) {
                        statusChangeCallback(response);
                    });
                }
                function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
                    console.log('statusChangeCallback');
                    console.log(response);                   // The current login status of the person.
                    if (response.status === 'connected') {
                        SendFb(response, getName());// Logged into your webpage and Facebook.
                        //  testAPI();
                    } else {                                 // Not logged into your webpage or we are unable to tell.
                        document.getElementById('status').innerHTML = 'Please log ' +
                            'into this webpage.';
                    }
                }
                //FB.getLoginStatus(function (response) {   // Called after the JS SDK has been initialized.
                //    statusChangeCallback(response);        // Returns the login status.
                //});
                function getName() {
                    // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
                    FB.api('/me', function (response) {
                        return response.name;
                    });
                }
                window.fbAsyncInit = function () {
                    FB.init({
                        appId: '826080674623621',
                        cookie: true,
                        xfbml: true,
                        version: 'afc462708091d6188c903e76f6b45771'
                    });

                    FB.AppEvents.logPageView();

                };

                (function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0];
                    if (d.getElementById(id)) { return; }
                    js = d.createElement(s); js.id = id;
                    js.src = "https://connect.facebook.net/en_US/sdk.js";
                    fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
        </form>
    </div>
</div>


